"""Python Cookbook

Chapter 11, Examples from the text.

•	Using the Flask framework for RESTful APIs
•	Parsing the query string in a request
•	Making REST requests with urllib
•	Parsing the URL path
•	Parsing a JSON request
•	Implementing authentication for web services


"""

# The Card Model

>>> from Chapter_12.card_model import Deck
>>> import random
>>> random.seed(42)
>>> deck = Deck()
>>> cards = deck.deal(5)
>>> cards
[Card(rank=3, suit='♡'), Card(rank=6, suit='♣'), Card(rank=7, suit='♡'), Card(rank=1, suit='♣'), Card(rank=6, suit='♡')]

>>> import json
>>> json_cards = list(card.to_json() for card in deck.deal(5))
>>> print(json.dumps(json_cards, indent=2, sort_keys=True))
[
  {
    "__class__": "Card",
    "rank": 10,
    "suit": "\u2662"
  },
  {
    "__class__": "Card",
    "rank": 5,
    "suit": "\u2660"
  },
  {
    "__class__": "Card",
    "rank": 10,
    "suit": "\u2663"
  },
  {
    "__class__": "Card",
    "rank": 5,
    "suit": "\u2663"
  },
  {
    "__class__": "Card",
    "rank": 3,
    "suit": "\u2663"
  }
]

# Parsing the query string in a request

>>> from urllib.parse import urlencode
>>> urlencode({'n':355,'d':113})
'n=355&d=113'
>>> urlencode({'n':355,'d':113,'note':'this&that'})
'n=355&d=113&note=this%26that'

# Implementing authentication for web services

>>> from werkzeug.security import generate_password_hash, check_password_hash
>>> pw = generate_password_hash("OpenSesame", method="md5")
>>>
>>> fixed_pw = 'md5$gPz8aSmF$e58f7dd2eae658fd30f1acc804ba4c07'
>>> check_password_hash(fixed_pw, "a bad guess")
False
>>> check_password_hash(fixed_pw, "OpenSesame")
True

